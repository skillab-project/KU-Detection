{
  "openapi": "3.0.0",
  "info": {
    "title": "KU-Detection-Back-End API",
    "version": "1.0.0",
    "description": "API for the KU-Detection-Back-End project."
  },
  "tags": [
    {
      "name": "Clustering",
      "description": "Endpoints for performing data clustering."
    },
    {
      "name": "Repository Management",
      "description": "Endpoints for creating, listing, and managing repositories."
    },
    {
      "name": "Analysis",
      "description": "Endpoints for running and retrieving analysis results."
    },
    {
      "name": "Risk Analysis",
      "description": "Endpoints for calculating knowledge and employee-related risks."
    },
    {
      "name": "Statistics",
      "description": "Endpoints for retrieving aggregated statistics."
    }
  ],
  "paths": {
    "/ku_risk": {
      "get": {
        "tags": [
          "Risk Analysis"
        ],
        "summary": "Calculate KU Risk",
        "description": "Calculates and returns the risk associated with each individual Knowledge Unit (KU) based on all available analysis data. The risk for a KU is defined as the product of its probability of loss and its impact. A higher value indicates a more critical and vulnerable KU.",
        "responses": {
          "200": {
            "description": "KU Risk calculation was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ku_name": {
                        "type": "string",
                        "description": "The name of the Knowledge Unit.",
                        "example": "KU_15_ExceptionHandling"
                      },
                      "ku_risk": {
                        "type": "number",
                        "format": "float",
                        "description": "The final calculated risk score for the KU (P(L) * Impact). Ranges from 0 to 1.",
                        "example": 0.000125
                      },
                      "probability_of_loss": {
                        "type": "number",
                        "format": "float",
                        "description": "The probability that the knowledge of this KU is completely lost from the organization, calculated as P_A ^ employee_count.",
                        "example": 0.001
                      },
                      "impact": {
                        "type": "number",
                        "format": "float",
                        "description": "The functional impact of losing this KU, calculated as the ratio of files containing the KU to the total number of files.",
                        "example": 0.125
                      },
                      "employee_count": {
                        "type": "integer",
                        "description": "The number of unique employees who possess knowledge of this KU.",
                        "example": 3
                      },
                      "file_frequency": {
                        "type": "integer",
                        "description": "The number of files in which this KU was detected.",
                        "example": 50
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during risk calculation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred: database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employee_risk": {
      "get": {
        "tags": [
          "Risk Analysis"
        ],
        "summary": "Calculate Employee Risk",
        "description": "Calculates the risk associated with the hypothetical departure of each employee. This is determined by the impact their departure would have on the overall risk of the Knowledge Units they possess.",
        "responses": {
          "200": {
            "description": "Employee Risk calculation was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "employee_name": {
                        "type": "string",
                        "description": "The name or identifier of the employee.",
                        "example": "jane.doe@example.com"
                      },
                      "absolute_employee_risk": {
                        "type": "number",
                        "format": "float",
                        "description": "The total absolute increase in risk across all of the employee's KUs if they were to leave. Represents the raw 'damage' of their departure.",
                        "example": 0.0085
                      },
                      "relative_employee_risk": {
                        "type": "number",
                        "format": "float",
                        "description": "The percentage increase in risk relative to the initial total risk of the employee's KUs. A value of 1.0 means the risk doubles.",
                        "example": 9.0
                      },
                      "ku_count": {
                        "type": "integer",
                        "description": "The number of unique Knowledge Units this employee contributes to.",
                        "example": 12
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during risk calculation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An unexpected error occurred: database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cluster_repos": {
      "post": {
        "tags": [
          "Clustering"
        ],
        "summary": "Cluster Repositories by KUs",
        "description": "Performs K-Means clustering on repositories based on their detected Knowledge Units (KUs). It also uses PCA to reduce the data to 2D coordinates for visualization. The number of clusters is specified in the request body.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "num_clusters"
                ],
                "properties": {
                  "num_clusters": {
                    "type": "integer",
                    "description": "The desired number of clusters to create. Must be 2 or greater.",
                    "example": 3,
                    "minimum": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clustering performed successfully. Returns a list of repositories with their assigned cluster ID and 2D coordinates for plotting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "repo_name": {
                        "type": "string",
                        "description": "The name of the repository.",
                        "example": "kafka-python"
                      },
                      "cluster": {
                        "type": "integer",
                        "description": "The ID of the cluster the repository belongs to.",
                        "example": 1
                      },
                      "coordinates": {
                        "type": "object",
                        "description": "The 2D coordinates of the repository for visualization, generated by PCA.",
                        "properties": {
                          "x": {
                            "type": "number",
                            "format": "float",
                            "description": "The x-coordinate in the 2D space.",
                            "example": -0.5483
                          },
                          "y": {
                            "type": "number",
                            "format": "float",
                            "description": "The y-coordinate in the 2D space.",
                            "example": 1.2945
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. The 'num_clusters' parameter is missing, not an integer, less than 2, or there are not enough repositories to form the requested clusters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Not enough repositories with detected KUs to form the requested number of clusters."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred during the clustering process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to perform clustering due to an internal error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commits": {
      "post": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Get Commits",
        "description": "Retrieves a list of commits from a specified repository.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/repo.git"
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Maximum number of commits to retrieve",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the commit"
                      },
                      "message": {
                        "type": "string",
                        "description": "Commit message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/repos": {
      "post": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Create Repository",
        "description": "Creates a new repository entry.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_name": {
                    "type": "string",
                    "description": "Name of the repository",
                    "example": "my-repo"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/my-repo.git"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization or owner of the repository",
                    "example": "apache"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the repository",
                    "example": "My cool project"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments about the repository",
                    "example": "This repository is for..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Repository created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Repository created successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Repository Management"
        ],
        "summary": "List Repositories",
        "description": "Lists all repository entries",
        "responses": {
          "200": {
            "description": "Successsful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "repo_name": {
                        "type": "string",
                        "description": "Name of repository"
                      },
                      "url": {
                        "type": "string",
                        "description": "Repository URL"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/detected_kus": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Detected KUs",
        "description": "Retrieves detected KUs.",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ku_id": {
                        "type": "integer",
                        "description": "KU ID",
                        "example": 1
                      },
                      "ku_name": {
                        "type": "string",
                        "description": "KU Name",
                        "example": "Knowledge Unit 1"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database query failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/repos/{repo_name}": {
      "put": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Edit Repository",
        "description": "Edits an existing repository entry.",
        "parameters": [
          {
            "name": "repo_name",
            "in": "path",
            "required": true,
            "description": "Name of the repository to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/my-repo.git"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization or owner of the repository",
                    "example": "apache"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the repository",
                    "example": "My updated cool project"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments about the repository",
                    "example": "These are the updated comments"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Repository updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Repository updated successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database update failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timestamps": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Commits Timestamps",
        "description": "Retrieve commits timestampts.",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "Name of the repository to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sha": {
                        "type": "string",
                        "description": "Sha of the commit"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "Timestamp of the commit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historytime": {
      "get": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Get Repository History Time",
        "description": "Retrieves repository history",
        "parameters": [
          {
            "name": "repo_url",
            "in": "query",
            "required": true,
            "description": "Repo URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repo_name": {
                      "type": "string",
                      "description": "Repo Name"
                    },
                    "commit_dates": {
                      "type": "array",
                      "description": "Commits Datess"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delete_repo/{repo_name}": {
      "delete": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Delete Repository",
        "description": "Delete a repository entry",
        "parameters": [
          {
            "name": "repo_name",
            "in": "path",
            "required": true,
            "description": "Repo to Delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analyze a Repository",
        "description": "Analyze a repository",
        "parameters": [
          {
            "name": "repo_url",
            "in": "query",
            "required": true,
            "description": "URL to Analyze",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string",
                      "description": "TBA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analysis_status": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analysis Status",
        "description": "Analisis Status",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "Repo Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyzedb": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analyzed DB",
        "description": "Analyzed DB",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "repo_name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "file name"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "time stamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyzeall": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "All Analysis",
        "description": "Gets all analysis from the db",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "file name"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "time stamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analysis_results": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Analysis Results with Optional Filtering",
        "description": "Retrieves records from the 'analysis_results' table. This single endpoint can return all results or a filtered subset based on an optional date range. If no parameters are provided, the entire table is returned. The start and end months are inclusive.",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "description": "The starting month to filter results from (inclusive). If omitted, results from the beginning of time are included. Format: YYYY-MM.",
            "schema": {
              "type": "string",
              "example": "2025-06"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "description": "The ending month to filter results up to (inclusive). If omitted, results up to the present are included. Format: YYYY-MM.",
            "schema": {
              "type": "string",
              "example": "2025-12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of analysis results (either all or filtered).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique identifier for the analysis record.",
                        "example": 101
                      },
                      "repo_name": {
                        "type": "string",
                        "description": "The name of the repository this analysis belongs to.",
                        "example": "my-cool-project"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the analyzed file.",
                        "example": "src/main.py"
                      },
                      "author": {
                        "type": "string",
                        "description": "The author of the commit associated with the file.",
                        "example": "john.doe@example.com"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the commit in ISO 8601 format.",
                        "example": "2023-10-27T10:30:00"
                      },
                      "sha": {
                        "type": "string",
                        "description": "The SHA hash of the commit.",
                        "example": "a1b2c3d4e5f6"
                      },
                      "detected_kus": {
                        "type": "object",
                        "description": "A JSON object where keys are KU identifiers and values indicate detection (e.g., '1' for detected).",
                        "example": {
                          "KU1": "1",
                          "KU5": "1"
                        }
                      },
                      "elapsed_time": {
                        "type": "number",
                        "format": "float",
                        "description": "The time taken to analyze this specific file, in seconds.",
                        "example": 15.78
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. A provided date parameter has an incorrect format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid date format. Please use YYYY-MM."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Could not retrieve data from the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to retrieve analysis results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ku_statistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get KU Statistics",
        "description": "Returns the total count of occurrences for each unique KU across all projects. Ideal for bar plots.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ku_id": {
                        "type": "string",
                        "example": "KU-005"
                      },
                      "count": {
                        "type": "integer",
                        "example": 152
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organization_stats": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get project counts by organization",
        "description": "Returns a list of organization names (e.g., 'apache', 'google') and the number of projects stored in the database for each.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "organization": {
                        "type": "string",
                        "example": "apache"
                      },
                      "count": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    },
    "/ku_by_organization": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get KU statistics by organization",
        "description": "Returns a list of organizations, and for each one, a list of the KUs detected in its projects and their respective counts.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully."
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    },
    "/monthly_analysis_stats": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get monthly analysis counts by organization",
        "description": "Returns a list of organizations, and for each one, the count of analyses performed per month on its projects.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully."
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    },
    "/developer_stats/{developer_name}": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get KU Statistics for a Specific Developer",
        "description": "Retrieves the count of unique files where each Knowledge Unit (KU) was detected for a single, specified developer. The response is a single JSON object containing all KUs (K1 to K27), with the count as the value. KUs not found for the developer will have a value of 0.",
        "parameters": [
          {
            "name": "developer_name",
            "in": "path",
            "required": true,
            "description": "The name of the developer (author) to retrieve statistics for. This is case-sensitive and must match the name in the database.",
            "schema": {
              "type": "string"
            },
            "example": "llk89"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the KU statistics for the specified developer.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "A dictionary where keys are the KU names (e.g., 'K1', 'K2') and values are the integer count of unique files.",
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "example": {
                    "K1": 0,
                    "K2": 5,
                    "K3": 1,
                    "K4": 1,
                    "K5": 2,
                    "K6": 0,
                    "K7": 1,
                    "K8": 1,
                    "K9": 0,
                    "K10": 0,
                    "K11": 0,
                    "K12": 0,
                    "K13": 0,
                    "K14": 0,
                    "K15": 1,
                    "K16": 0,
                    "K17": 0,
                    "K18": 0,
                    "K19": 0,
                    "K20": 0,
                    "K21": 0,
                    "K22": 0,
                    "K23": 0,
                    "K24": 0,
                    "K25": 0,
                    "K26": 0,
                    "K27": 0
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred, e.g., failed to connect to the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to retrieve statistics for the developer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}