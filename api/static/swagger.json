{
  "openapi": "3.0.0",
  "info": {
    "title": "KU-Detection-Back-End API",
    "version": "1.0.0",
    "description": "API for the KU-Detection-Back-End project."
  },
  "tags": [
    {
      "name": "Clustering",
      "description": "Endpoints for performing data clustering."
    },
    {
      "name": "Repository Management",
      "description": "Endpoints for creating, listing, and managing repositories."
    },
    {
      "name": "Analysis",
      "description": "Endpoints for running and retrieving analysis results."
    },
    {
      "name": "Statistics",
      "description": "Endpoints for retrieving aggregated statistics."
    }
  ],
  "paths": {
    "/cluster_repos": {
      "post": {
        "tags": [
          "Clustering"
        ],
        "summary": "Cluster Repositories by KUs",
        "description": "Performs K-Means clustering on repositories based on their detected Knowledge Units (KUs). It also uses PCA to reduce the data to 2D coordinates for visualization. The number of clusters is specified in the request body.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "num_clusters"
                ],
                "properties": {
                  "num_clusters": {
                    "type": "integer",
                    "description": "The desired number of clusters to create. Must be 2 or greater.",
                    "example": 3,
                    "minimum": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Clustering performed successfully. Returns a list of repositories with their assigned cluster ID and 2D coordinates for plotting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "repo_name": {
                        "type": "string",
                        "description": "The name of the repository.",
                        "example": "kafka-python"
                      },
                      "cluster": {
                        "type": "integer",
                        "description": "The ID of the cluster the repository belongs to.",
                        "example": 1
                      },
                      "coordinates": {
                        "type": "object",
                        "description": "The 2D coordinates of the repository for visualization, generated by PCA.",
                        "properties": {
                          "x": {
                            "type": "number",
                            "format": "float",
                            "description": "The x-coordinate in the 2D space.",
                            "example": -0.5483
                          },
                          "y": {
                            "type": "number",
                            "format": "float",
                            "description": "The y-coordinate in the 2D space.",
                            "example": 1.2945
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. The 'num_clusters' parameter is missing, not an integer, less than 2, or there are not enough repositories to form the requested clusters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Not enough repositories with detected KUs to form the requested number of clusters."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred during the clustering process.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to perform clustering due to an internal error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commits": {
      "post": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Get Commits",
        "description": "Retrieves a list of commits from a specified repository.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/repo.git"
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Maximum number of commits to retrieve",
                    "example": 50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the commit"
                      },
                      "message": {
                        "type": "string",
                        "description": "Commit message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/repos": {
      "post": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Create Repository",
        "description": "Creates a new repository entry.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "repo_name": {
                    "type": "string",
                    "description": "Name of the repository",
                    "example": "my-repo"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/my-repo.git"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization or owner of the repository",
                    "example": "apache"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the repository",
                    "example": "My cool project"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments about the repository",
                    "example": "This repository is for..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Repository created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Repository created successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Repository Management"
        ],
        "summary": "List Repositories",
        "description": "Lists all repository entries",
        "responses": {
          "200": {
            "description": "Successsful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "repo_name": {
                        "type": "string",
                        "description": "Name of repository"
                      },
                      "url": {
                        "type": "string",
                        "description": "Repository URL"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database connection failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/detected_kus": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Detected KUs",
        "description": "Retrieves detected KUs.",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ku_id": {
                        "type": "integer",
                        "description": "KU ID",
                        "example": 1
                      },
                      "ku_name": {
                        "type": "string",
                        "description": "KU Name",
                        "example": "Knowledge Unit 1"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database query failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/repos/{repo_name}": {
      "put": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Edit Repository",
        "description": "Edits an existing repository entry.",
        "parameters": [
          {
            "name": "repo_name",
            "in": "path",
            "required": true,
            "description": "Name of the repository to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL of the repository",
                    "example": "https://github.com/user/my-repo.git"
                  },
                  "organization": {
                    "type": "string",
                    "description": "The organization or owner of the repository",
                    "example": "apache"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the repository",
                    "example": "My updated cool project"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments about the repository",
                    "example": "These are the updated comments"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Repository updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message",
                      "example": "Repository updated successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message",
                      "example": "Database update failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timestamps": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Commits Timestamps",
        "description": "Retrieve commits timestampts.",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "Name of the repository to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sha": {
                        "type": "string",
                        "description": "Sha of the commit"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "Timestamp of the commit"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historytime": {
      "get": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Get Repository History Time",
        "description": "Retrieves repository history",
        "parameters": [
          {
            "name": "repo_url",
            "in": "query",
            "required": true,
            "description": "Repo URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repo_name": {
                      "type": "string",
                      "description": "Repo Name"
                    },
                    "commit_dates": {
                      "type": "array",
                      "description": "Commits Datess"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delete_repo/{repo_name}": {
      "delete": {
        "tags": [
          "Repository Management"
        ],
        "summary": "Delete Repository",
        "description": "Delete a repository entry",
        "parameters": [
          {
            "name": "repo_name",
            "in": "path",
            "required": true,
            "description": "Repo to Delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analyze a Repository",
        "description": "Analyze a repository",
        "parameters": [
          {
            "name": "repo_url",
            "in": "query",
            "required": true,
            "description": "URL to Analyze",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string",
                      "description": "TBA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analysis_status": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analysis Status",
        "description": "Analisis Status",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "Repo Name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyzedb": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analyzed DB",
        "description": "Analyzed DB",
        "parameters": [
          {
            "name": "repo_name",
            "in": "query",
            "required": true,
            "description": "repo_name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "file name"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "time stamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analyzeall": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "All Analysis",
        "description": "Gets all analysis from the db",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "file name"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "time stamp"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error Message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analysis_results/all": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get All Analysis Results Table",
        "description": "Retrieves the entire content of the 'analysis_results' table from the database. This provides a raw dump of all individual analysis records across all repositories.",
        "responses": {
          "200": {
            "description": "Successful retrieval of all analysis results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique identifier for the analysis record.",
                        "example": 101
                      },
                      "repo_name": {
                        "type": "string",
                        "description": "The name of the repository this analysis belongs to.",
                        "example": "my-cool-project"
                      },
                      "filename": {
                        "type": "string",
                        "description": "The name of the analyzed file.",
                        "example": "src/main.py"
                      },
                      "author": {
                        "type": "string",
                        "description": "The author of the commit associated with the file.",
                        "example": "john.doe@example.com"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the commit in ISO 8601 format.",
                        "example": "2023-10-27T10:30:00"
                      },
                      "sha": {
                        "type": "string",
                        "description": "The SHA hash of the commit.",
                        "example": "a1b2c3d4e5f6"
                      },
                      "detected_kus": {
                        "type": "object",
                        "description": "A JSON object where keys are KU identifiers and values indicate detection (e.g., '1' for detected).",
                        "example": {
                          "KU1": "1",
                          "KU5": "1"
                        }
                      },
                      "elapsed_time": {
                        "type": "number",
                        "format": "float",
                        "description": "The time taken to analyze this specific file, in seconds.",
                        "example": 15.78
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Could not retrieve data from the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to retrieve the analysis results table"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/analysis_results/by_date_range": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Analysis Results by Date Range",
        "description": "Retrieves analysis results from the 'analysis_results' table that fall within a specified date range. The start and end months are inclusive. Dates should be provided in 'YYYY-MM' format.",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "description": "The starting month of the date range (inclusive). Format: YYYY-MM.",
            "schema": {
              "type": "string",
              "example": "2025-06"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "description": "The ending month of the date range (inclusive). Format: YYYY-MM.",
            "schema": {
              "type": "string",
              "example": "2025-12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of filtered analysis results.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1analysis_results~1all/get/responses/200/content/application~1json/schema/items"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Parameters are missing or have an incorrect format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Please provide both 'start_date' and 'end_date' parameters in YYYY-MM format."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Could not retrieve data from the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to retrieve filtered analysis results"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ku_statistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get KU Statistics",
        "description": "Returns the total count of occurrences for each unique KU across all projects. Ideal for bar plots.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ku_id": {
                        "type": "string",
                        "example": "KU-005"
                      },
                      "count": {
                        "type": "integer",
                        "example": 152
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organization_stats": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get project counts by organization",
        "description": "Returns a list of organization names (e.g., 'apache', 'google') and the number of projects stored in the database for each.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "organization": {
                        "type": "string",
                        "example": "apache"
                      },
                      "count": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    },
    "/ku_by_organization": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get KU statistics by organization",
        "description": "Returns a list of organizations, and for each one, a list of the KUs detected in its projects and their respective counts.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully."
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    },
    "/monthly_analysis_stats": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get monthly analysis counts by organization",
        "description": "Returns a list of organizations, and for each one, the count of analyses performed per month on its projects.",
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully."
          },
          "500": {
            "description": "Server error while retrieving data."
          }
        }
      }
    }
  }
}
